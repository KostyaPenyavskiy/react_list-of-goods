{"version":3,"sources":["GoodsList/GoodsList.js","App.js","index.js"],"names":["GoodsList","state","goods","props","selectedLength","select","Array","fill","map","item","index","key","value","reverse","setState","sortAlphabetically","sort","sortByLength","a","b","length","reset","this","filter","type","onClick","onChange","e","target","React","Component","goodsFromServer","App","init","className","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,YAAK,EAAKC,MAAMD,OACtBE,eAAgB,GAHpB,EAMEC,OAAS,IAAIC,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAMC,GAAP,OACjC,4BACEC,IAAKD,EACLE,MAAOF,EAAQ,GAEdA,EAAQ,MAXf,EAeEG,QAAU,WACR,EAAKC,SAAS,CACZZ,MAAO,YAAI,EAAKC,MAAMD,OAAOW,aAjBnC,EAqBEE,mBAAqB,WACnB,EAAKD,SAAS,CACZZ,MAAO,YAAI,EAAKC,MAAMD,OAAOc,UAvBnC,EA2BEC,aAAe,WACb,EAAKH,SAAS,CACZZ,MAAO,YAAI,EAAKC,MAAMD,OAAOc,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,aA7B/D,EAiCEC,MAAQ,WACN,EAAKP,SAAS,CACZZ,MAAM,YAAK,EAAKC,MAAMD,OACtBE,eAAgB,KApCtB,uDAwCY,IAAD,OACP,OACE,6BACE,4BACGkB,KAAKrB,MAAMC,MACTqB,QAAO,SAAAd,GAAI,OAAIA,EAAKW,QAAU,EAAKnB,MAAMG,kBACzCI,KAAI,SAAAC,GAAI,OACP,wBAAIE,IAAKF,GAAOA,OAGtB,4BACEe,KAAK,SACLC,QAASH,KAAKT,SAFhB,WAMA,4BACEW,KAAK,SACLC,QAASH,KAAKP,oBAFhB,uBAMA,4BACES,KAAK,SACLC,QAASH,KAAKD,OAFhB,SAMA,4BACEG,KAAK,SACLC,QAASH,KAAKL,cAFhB,kBAMA,4BACES,SAAU,SAAAC,GAAC,OAAI,EAAKb,SAAS,CAAEV,eAAgBuB,EAAEC,OAAOhB,UAEvDU,KAAKjB,aA7EhB,GAA+BwB,IAAMC,WCE/BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiCaC,E,4MA7Bb/B,MAAQ,CACNgC,MAAM,G,uDAGE,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,qCACCZ,KAAKrB,MAAMgC,KAER,kBAAC,EAAD,CACE/B,MAAO6B,IAIT,4BACEP,KAAK,SACLC,QAAS,kBACP,EAAKX,SAAS,CAAEmB,MAAM,MAH1B,c,GAhBMJ,IAAMC,WCdxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.84810ff9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class GoodsList extends React.Component {\n  state = {\n    goods: [...this.props.goods],\n    selectedLength: 1,\n  }\n\n  select = new Array(10).fill(0).map((item, index) => (\n    <option\n      key={index} // если мне здесь не нужна привязка к данным, вроде бы, можно индекс использовать?\n      value={index + 1}\n    >\n      {index + 1}\n    </option>\n  ));\n\n  reverse = () => {\n    this.setState({\n      goods: [...this.props.goods].reverse(),\n    });\n  }\n\n  sortAlphabetically = () => {\n    this.setState({\n      goods: [...this.props.goods].sort(),\n    });\n  }\n\n  sortByLength = () => {\n    this.setState({\n      goods: [...this.props.goods].sort((a, b) => a.length - b.length),\n    });\n  }\n\n  reset = () => {\n    this.setState({\n      goods: [...this.props.goods],\n      selectedLength: 1,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.state.goods\n            .filter(item => item.length >= this.state.selectedLength)\n            .map(item => (\n              <li key={item}>{item}</li>\n            ))}\n        </ul>\n        <button\n          type=\"button\"\n          onClick={this.reverse}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n        <select\n          onChange={e => this.setState({ selectedLength: e.target.value })}\n        >\n          {this.select}\n        </select>\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport './App.css';\n\nimport { GoodsList } from './GoodsList/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    init: false,\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {this.state.init\n          ? (\n            <GoodsList\n              goods={goodsFromServer}\n            />\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={() => (\n                this.setState({ init: true })\n              )}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}